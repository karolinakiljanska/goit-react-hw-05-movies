{"version":3,"file":"static/js/544.60f114a8.chunk.js","mappings":"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","sources":["Services/Api.js","components/MovieList/MovieListStyled.js","components/MovieList/MovieList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '9b39931418d434655f10fcb806f4d8c7';\n\nexport const fetchTrendingMovies = async () => {\n  const result = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  return result.data;\n};\n\nexport const fetchMovieBySearch = async query => {\n  const result = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return result.data.results;\n};\nexport const fetchMovieById = async id => {\n  const result = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return result.data;\n};\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\nexport const Item = styled.li`\n  list-style: none;\n  gap: 10px;\n`;\nexport const Img = styled.img`\n  width: 150px;\n  margin: 5px 10px;\n  border-radius: 6px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, Item, Img } from './MovieListStyled';\nconst PosterUrl = 'https://image.tmdb.org/t/p/w500/';\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.length > 0 &&\n        movies.map(movie => (\n          <Item key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {!!movie.poster_path && (\n                <Img\n                  src={`${PosterUrl + movie.poster_path}`}\n                  alt={movie.title}\n                />\n              )}\n            </Link>\n          </Item>\n        ))}\n    </List>\n  );\n};\nexport default MoviesList;\n","import { fetchTrendingMovies } from 'Services/Api';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport MoviesList from 'components/MovieList/MovieList';\nimport { Titile, Container } from 'components/SharedLayout/SharedLayout.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    fetchTrendingMovies().then(result => {\n      setMovies(result.results);\n    });\n  }, []);\n  return (\n    <Container>\n      <div state={{ from: location }}>\n        <Titile>Trending today</Titile>\n        <MoviesList movies={movies} />\n      </div>\n    </Container>\n  );\n};\n\nexport default Home;\n"],"names":["axios","API_KEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","fetchMovieBySearch","_ref2","_callee2","query","_context2","results","_x","fetchMovieById","_ref3","_callee3","id","_context3","_x2","fetchReviews","_ref4","_callee4","_yield$axios$get","_context4","_x3","fetchCast","_ref5","_callee5","movieId","_yield$axios$get2","_context5","cast","_x4","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Img","_templateObject3","movies","location","useLocation","_jsx","children","length","map","movie","Link","to","state","from","poster_path","src","alt","title","_useState","useState","_useState2","_slicedToArray","setMovies","useEffect","then","Container","_jsxs","Titile","MoviesList"],"sourceRoot":""}