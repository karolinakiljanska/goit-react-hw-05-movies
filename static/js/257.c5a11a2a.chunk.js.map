{"version":3,"file":"static/js/257.c5a11a2a.chunk.js","mappings":"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","sources":["Services/Api.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '9b39931418d434655f10fcb806f4d8c7';\n\nexport const fetchTrendingMovies = async () => {\n  const result = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  return result.data;\n};\n\nexport const fetchMovieBySearch = async query => {\n  const result = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return result.data.results;\n};\nexport const fetchMovieById = async id => {\n  const result = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return result.data;\n};\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 30px 60px 20px 60px;\n  box-shadow: 0px 0px 9px 5px rgba(0, 0, 0, 0.67);\n  background-color: #fdf0f7;\n  width: 100%;\n\n  min-height: 1000px;\n  position: relative;\n`;\nexport const GoBack = styled.div`\n  display: flex;\n\n  width: 100px;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid gray;\n  border-radius: 4px;\n  margin: 5px 10px;\n  padding: 4px;\n`;\nexport const FilmCard = styled.div`\n  display: flex;\n\n  padding: 10px 10px;\n  border-bottom: 1px solid gray;\n\n  @media screen and (max-width: 647px) {\n     {\n      flex-wrap: wrap;\n      gap: 10px;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n`;\nexport const Title = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n  padding-left: 20px;\n  padding-top: 5px;\n  border-top: 2px solid gray;\n`;\nexport const FilmImg = styled.img`\n  border-radius: 10px;\n  border: 2px solid gray;\n  margin-right: 20px;\n  padding: 0;\n  width: 250px;\n`;\nexport const OwerviewWrapper = styled.div`\n  padding: 5px 15px;\n\n  font-size: 18px;\n  font-weight: 400;\n  text-align: justify;\n  line-height: 1.4;\n  border-radius: 6px;\n  background-color: #fdf0f7;\n`;\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  padding: 5px 50px;\n\n  gap: 15px;\n  border-bottom: 3px solid gray;\n`;\nexport const Cast = styled.div`\n  display: flex;\n  width: 80px;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding: 4px;\n`;\n\nexport const Reviews = styled.div`\n  display: flex;\n  width: 80px;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding: 4px;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { fetchMovieById } from 'Services/Api';\nimport {\n  Container,\n  GoBack,\n  FilmCard,\n  Title,\n  FilmImg,\n  OwerviewWrapper,\n  LinkWrapper,\n  Cast,\n  Reviews,\n} from './MovieDetails.styled';\n\nconst movieImgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies/:movieId');\n\n  useEffect(() => {\n    fetchMovieById(movieId).then(result => setMovie(result));\n  });\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <Container>\n      <GoBack>\n        <Link\n          style={{\n            textDecoration: 'none',\n            display: 'block',\n            position: 'relative',\n            padding: '6px',\n          }}\n          to={backLinkHref.current}\n        >\n          Go BACK\n        </Link>\n      </GoBack>\n      <Title>{movie.title}</Title>\n      <FilmCard>\n        <FilmImg\n          src={`${movieImgBaseUrl + movie.poster_path}`}\n          alt={movie.title}\n        />\n        <OwerviewWrapper>\n          <p>Overview</p>\n          <p>{movie.overview}</p>\n        </OwerviewWrapper>\n      </FilmCard>\n\n      <LinkWrapper>\n        <Cast>\n          <Link\n            style={{\n              textDecoration: 'none',\n            }}\n            to=\"cast\"\n            state={location.state}\n          >\n            Cast\n          </Link>\n        </Cast>\n        <Reviews>\n          <Link\n            style={{\n              textDecoration: 'none',\n            }}\n            to=\"reviews\"\n            state={location.state}\n          >\n            Reviews\n          </Link>\n        </Reviews>\n      </LinkWrapper>\n      <Outlet />\n    </Container>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","API_KEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","fetchMovieBySearch","_ref2","_callee2","query","_context2","results","_x","fetchMovieById","_ref3","_callee3","id","_context3","_x2","fetchReviews","_ref4","_callee4","_yield$axios$get","_context4","_x3","fetchCast","_ref5","_callee5","movieId","_yield$axios$get2","_context5","cast","_x4","Container","styled","_templateObject","_taggedTemplateLiteral","GoBack","_templateObject2","FilmCard","_templateObject3","Title","_templateObject4","FilmImg","_templateObject5","OwerviewWrapper","_templateObject6","LinkWrapper","_templateObject7","Cast","_templateObject8","Reviews","_templateObject9","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","then","_jsxs","children","_jsx","Link","style","textDecoration","display","position","padding","to","current","title","src","poster_path","alt","overview","Outlet"],"sourceRoot":""}