{"version":3,"file":"static/js/186.8bc1112b.chunk.js","mappings":"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","sources":["Services/Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '9b39931418d434655f10fcb806f4d8c7';\n\nexport const fetchTrendingMovies = async () => {\n  const result = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  return result.data;\n};\n\nexport const fetchMovieBySearch = async query => {\n  const result = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return result.data.results;\n};\nexport const fetchMovieById = async id => {\n  const result = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return result.data;\n};\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n","import { useEffect, useState } from 'react';\nimport { fetchReviews } from 'Services/Api';\nimport { useParams } from 'react-router-dom';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  console.log(movieId);\n\n  useEffect(() => {\n    fetchReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n  return (\n    <div>\n      <ul>\n        {<p>There is no reviews yet</p> ||\n          reviews.map(review => (\n            <li key={review.id}>\n              <p> Author: {review.author}</p>\n              <span>{review.content}</span>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n// export default Reviews;\n"],"names":["axios","API_KEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","fetchMovieBySearch","_ref2","_callee2","query","_context2","results","_x","fetchMovieById","_ref3","_callee3","id","_context3","_x2","fetchReviews","_ref4","_callee4","_yield$axios$get","_context4","_x3","fetchCast","_ref5","_callee5","movieId","_yield$axios$get2","_context5","cast","_x4","Reviews","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useParams","console","log","useEffect","then","_jsx","children","map","review","_jsxs","author","content"],"sourceRoot":""}